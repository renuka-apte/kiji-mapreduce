<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <!--
    (c) Copyright 2013 WibiData, Inc.

    See the NOTICE file distributed with this work for additional
    information regarding copyright ownership.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
  -->

  <modelVersion>4.0.0</modelVersion>

  <artifactId>kiji-mapreduce-hadoop1</artifactId>
  <packaging>jar</packaging>

  <parent>
    <groupId>org.kiji.mapreduce</groupId>
    <artifactId>kiji-mapreduce-root</artifactId>
    <version>1.0.3-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>

  <properties>
    <hadoop.version>1.0.3</hadoop.version>
    <hbase.version>0.94.7</hbase.version>
    <hbase-maven-plugin.version>1.0.10-hadoop1</hbase-maven-plugin.version>
    <kiji-avro.version>1.1.2-hdp</kiji-avro.version>
    <kiji-schema.classifier />
    <aspectj-maven-plugin.version>1.4</aspectj-maven-plugin.version>
    <aspectjrt.version>1.7.2</aspectjrt.version>
  </properties>

  <name>KijiMR (Hadoop 1.x)</name>
  <description>A framework for interacting with Kiji Through MapReduce</description>
  <url>http://www.kiji.org</url>

  <build>
    <!-- Use sources from the main kiji-mapreduce module. -->
    <sourceDirectory>../kiji-mapreduce/src/main/java</sourceDirectory>
    <scriptSourceDirectory>../kiji-mapreduce/src/main/scripts</scriptSourceDirectory>
    <testSourceDirectory>../kiji-mapreduce/src/test/java</testSourceDirectory>
    <resources>
      <resource>
        <directory>../kiji-mapreduce/src/main/resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>../kiji-mapreduce/src/test/resources</directory>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-maven-plugin</artifactId>
        <configuration>
          <!-- Avro string compiled to java.lang.String instead of CharSequence -->
          <stringType>String</stringType>
          <sourceDirectory>../kiji-mapreduce/src/main/avro</sourceDirectory>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <!-- Retrieve distribution-specific dependencies for packaging by dist/ module. -->
            <id>get-distro-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.kiji.avro</groupId>
                  <artifactId>kiji-avro</artifactId>
                  <version>${kiji-avro.version}</version>
                  <type>jar</type>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <!-- Get dependencies from main compilation (module kiji-mapreduce) into this build. -->
      <groupId>org.kiji.mapreduce</groupId>
      <artifactId>kiji-mapreduce-hadoop2</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
    </dependency>

    <!-- kiji-mapreduce's "provided" and test dependencies must be mirrored here: -->
    <dependency>
      <groupId>org.kiji.schema</groupId>
      <artifactId>kiji-schema</artifactId>
      <version>${kiji-schema.version}</version>
      <classifier>${kiji-schema.classifier}</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.kiji.schema</groupId>
      <artifactId>kiji-schema</artifactId>
      <version>${kiji-schema.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- The dependency on Apache Avro must also be made explicit in this pom. -->
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>${avro.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <!-- Override kiji-avro dependency with a Hadoop 1.x-specific version. -->
      <groupId>org.kiji.avro</groupId>
      <artifactId>kiji-avro</artifactId>
      <version>${kiji-avro.version}</version>
    </dependency>
    <dependency>
      <groupId>org.kiji.testing</groupId>
      <artifactId>fake-hbase</artifactId>
      <version>${fake-hbase.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-test</artifactId>
      <version>${hadoop.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
    </dependency>

    <!-- Override hadoop dependencies with hadoop 1.x versions. -->
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-core</artifactId>
      <version>${hadoop.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-minicluster</artifactId>
      <version>${hadoop.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase</artifactId>
      <version>${hbase.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase</artifactId>
      <version>${hbase.version}</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <!-- A Maven profile that runs integration tests in Hadoop 1. -->
      <!-- Invoke with mvn clean verify -Dplatform=hadoop1 -->
      <id>hadoop1-tests</id>
      <activation>
        <property>
          <name>platform</name>
          <value>hadoop1</value>
        </property>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>org.kiji.maven.plugins</groupId>
            <artifactId>hbase-maven-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <additionalClasspathElements>
                <additionalClasspathElement>
                  ${project.build.directory}/${project.artifactId}-${project.version}.jar
                </additionalClasspathElement>
                <additionalClasspathElement>
                  ${project.build.directory}/${project.artifactId}-${project.version}-tests.jar
                </additionalClasspathElement>
              </additionalClasspathElements>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--
      This profile compiles kijiMR with profiling support compiled in.
      -->
      <id>profiling</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <kiji-schema.classifier>profiling</kiji-schema.classifier>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.aspectj</groupId>
          <artifactId>aspectjrt</artifactId>
          <version>${aspectjrt.version}</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <!-- Add the profiling sources to the build -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.7</version>
            <executions>
              <execution>
                <id>add-source</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>../kiji-mapreduce/src/main/profiling/java/</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Enable AspectJ's bytecode rewriting to include profiling point cuts -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>aspectj-maven-plugin</artifactId>
            <version>${aspectj-maven-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>compile</goal>
                  <goal>test-compile</goal>
                </goals>
                <configuration>
                  <source>${maven.compiler.source}</source>
                  <target>${maven.compiler.target}</target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Use the appropriate classifier -->
          <plugin>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <classifier>profiling</classifier>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- AspectJ doesn't currently play nicely with findbugs. -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
